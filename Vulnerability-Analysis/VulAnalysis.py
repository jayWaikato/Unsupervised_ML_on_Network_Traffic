import pandas as pd
from sklearn.preprocessing import MultiLabelBinarizer
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt


file_path = 'MLDATA.csv'

data = pd.read_csv(file_path,delimiter='\t')

print(type(data))

brute_forced_hosts = data[data['Successful Brute Force Attacks']>0].copy()

brute_forced_hosts['Open ports'] = brute_forced_hosts['Open ports'].apply(lambda x : list(map(int,x.strip('[]').split(','))))
brute_forced_hosts['Successfully Brute-Forced Ports'] = brute_forced_hosts['Successfully Brute-Forced Ports'].apply(lambda x : list(map(int,x.strip('[]').split(','))))
brute_forced_hosts['All ports'] = brute_forced_hosts.apply(lambda x: (x['Open ports'] + x['Successfully Brute-Forced Ports']) , axis=1)

mlb = MultiLabelBinarizer()
encoded_ports = mlb.fit_transform(brute_forced_hosts['All ports'])
# print(encoded_ports)


# df_encoded = pd.DataFrame(
#     encoded_ports,
#     index=brute_forced_hosts['IP Address'], # preserves the original row labels
#     columns=mlb.classes_.astype(str)  # column names = each port, as strings
# )

# print(df_encoded.head())

kmeans = KMeans(3,random_state=42)
brute_forced_hosts['Cluster'] = kmeans.fit_predict(encoded_ports)
# print(brute_forced_hosts['Cluster'])
most_frequent_open_ports = brute_forced_hosts['Open ports'].explode().value_counts().head(10)
# print(most_frequent_open_ports)

brute_forced_hosts['num of successfully brute forced ports'] = brute_forced_hosts['Successfully Brute-Forced Ports'].apply(len)
correlation = brute_forced_hosts[['Exploitable Vulnerabilities','num of successfully brute forced ports']].corr().iloc[0,1]

plt.figure(figsize=[10,6])
for cluster in brute_forced_hosts['Cluster'].unique():
    subset = brute_forced_hosts[brute_forced_hosts['Cluster']==cluster]
    plt.scatter(subset.index,subset['Successful Brute Force Attacks'],label=f'clusetr {cluster}')
plt.xlabel("host index")
plt.ylabel("successful brute force attacks")
plt.title("clustering of hosts based on open ports and successful brute force attacks")
plt.legend()

plot_filename = "Vul_Analysis.png"
plt.savefig(plot_filename)
plt.show()
print("most frequemt open ports on brute force attacks")

print(most_frequent_open_ports)

print(f"correlation bnetween Exploitable vulnerablitiewws and successfully brute  forced ports : {100*correlation:.2f}%")
